#pragma once

#include <unordered_map>
#include <QString>

namespace key_names {

enum keys {
  kEsc,
  kF1,
  kF2,
  kF3,
  kF4,
  kF5,
  kF6,
  kF7,
  kF8,
  kF9,
  kF10,
  kF11,
  kF12,
  kScrollLock,
  kPause,
  kApostrophe,
  k1,
  k2,
  k3,
  k4,
  k5,
  k6,
  k7,
  k8,
  k9,
  k0,
  kMinus,
  kEqualSign,
  kBackspace,
  kInsert,
  kHome,
  kPageUp,
  kNumLock,
  kRightSlash,
  kStar,
  kTab,
  kQ,
  kW,
  kE,
  kR,
  kT,
  kY,
  kU,
  kI,
  kO,
  kP,
  kLeftSquareBrace,
  kRightSquareBrace,
  kEnter,
  kDelete,
  kEnd,
  kPageDown,
  kCapsLock,
  kA,
  kS,
  kD,
  kF,
  kG,
  kH,
  kJ,
  kK,
  kL,
  kSemiColon,
  kTopComa,
  kLeftSlash,
  kLShift,
  kZ,
  kX,
  kC,
  kV,
  kB,
  kN,
  kM,
  kComa,
  kPoint,
  kRShift,
  kArrowUp,
  kREnter,
  kLCtrl,
  kLAlt,
  kSpace,
  kRAlt,
  kWindows,
  kActionList,
  kRCtrl,
  kArrowLeft,
  kArrowDown,
  kArrowRight,
  kPlus,
  kLeftMouseButton,
  kRightMouseButton
};

const std::unordered_map<keys, QString> kEnumToKeyName{
    {kEsc, "Esc"},
    {kF1, "F1"},
    {kF2, "F2"},
    {kF3, "F3"},
    {kF4, "F4"},
    {kF5, "F5"},
    {kF6, "F6"},
    {kF7, "F7"},
    {kF8, "F8"},
    {kF9, "F9"},
    {kF10, "F10"},
    {kF11, "F11"},
    {kF12, "F12"},
    {kScrollLock, "Scroll Lock"},
    {kPause, "Pause"},
    {kApostrophe, "`"},
    {k1, "1"},
    {k2, "2"},
    {k3, "3"},
    {k4, "4"},
    {k5, "5"},
    {k6, "6"},
    {k7, "7"},
    {k8, "8"},
    {k9, "9"},
    {k0, "0"},
    {kMinus, "-"},
    {kEqualSign, "="},
    {kBackspace, "Backspace"},
    {kInsert, "Insert"},
    {kHome, "Home"},
    {kPageUp, "Page Up"},
    {kNumLock, "Num Lock"},
    {kRightSlash, "/"},
    {kStar, "*"},
    {kTab, "Tab"},
    {kQ, "Q"},
    {kW, "W"},
    {kE, "E"},
    {kR, "R"},
    {kT, "T"},
    {kY, "Y"},
    {kU, "U"},
    {kI, "I"},
    {kO, "O"},
    {kP, "P"},
    {kLeftSquareBrace, "["},
    {kRightSquareBrace, "]"},
    {kEnter, "Enter"},
    {kDelete, "Delete"},
    {kEnd, "End"},
    {kPageDown, "Page Down"},
    {kCapsLock, "Caps Lock"},
    {kA, "A"},
    {kS, "S"},
    {kD, "D"},
    {kF, "F"},
    {kG, "G"},
    {kH, "H"},
    {kJ, "J"},
    {kK, "K"},
    {kL, "L"},
    {kSemiColon, ";"},
    {kTopComa, "'"},
    {kLeftSlash, "\\"},
    {kLShift, "LShift"},
    {kZ, "Z"},
    {kX, "X"},
    {kC, "C"},
    {kV, "V"},
    {kB, "B"},
    {kN, "N"},
    {kM, "M"},
    {kComa, ","},
    {kPoint, "."},
    {kRShift, "RShift"},
    {kArrowUp, "ArrowUp"},
    {kREnter, "REnter"},
    {kLCtrl, "LCtrl"},
    {kLAlt, "LAlt"},
    {kSpace, "Space"},
    {kRAlt, "RAlt"},
    {kWindows, "Windows"},
    {kActionList, "ActionList"},
    {kRCtrl, "RCtrl"},
    {kArrowLeft, "ArrowLeft"},
    {kArrowDown, "ArrowDown"},
    {kArrowRight, "ArrowRight"},
    {kPlus, "+"},
    {kLeftMouseButton, "LeftMouseButton"},
    {kRightMouseButton, "RightMouseButton"}
};

extern const std::unordered_map<uint32_t, keys> kNativeCodeToKeyEnum;

}  // namespace key_names
